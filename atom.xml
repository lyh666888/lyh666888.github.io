<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>small_dino&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-04-07T13:51:42.531Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>lyh</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>树状数组详解</title>
    <link href="http://yoursite.com/2020/04/07/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2020/04/07/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E8%AF%A6%E8%A7%A3/</id>
    <published>2020-04-07T01:31:12.000Z</published>
    <updated>2020-04-07T13:51:42.531Z</updated>
    
    <content type="html"><![CDATA[<p>这是本人在这个hexo博客上写的第一篇博文！<br><del>[鼓掌]</del><br><a id="more"></a><br><strong>那么要讲什么呢？</strong><br><del>看得见标题吗</del>  </p><h3 id="对，这篇博文讲的主要就是树状数组！"><a href="#对，这篇博文讲的主要就是树状数组！" class="headerlink" title="对，这篇博文讲的主要就是树状数组！"></a>对，这篇博文讲的主要就是树状数组！</h3><p>那么就开始吧  </p><h1 id="1-单点查询，单点修改"><a href="#1-单点查询，单点修改" class="headerlink" title="1.单点查询，单点修改"></a>1.单点查询，单点修改</h1><p>有的读者要问了： 这个我们该如何构建树状数组呢？<br><del>数组的基本功能被你吃了？</del><br>代码非常简洁：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10001</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    a[x]=k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getsum</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a[x];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="2-区间修改，单点查询"><a href="#2-区间修改，单点查询" class="headerlink" title="2.区间修改，单点查询"></a>2.区间修改，单点查询</h1><p>这个时候普通数组就不太得心应手了<br>为什么呢？<br>普通数组修改单个元素的时间是$O(1)$<br>如果有某些<del>LXL</del>毒瘤卡你，每次都让你修改整个区间<br>那么修改一次的复杂度会达到$O(n)$<br>那我们怎么办呢？<del>终于感觉橘势很不妙了吧</del><br><strong>那么，现在，我们就正式来看看树状数组吧</strong><br>$\color{Red}{啊哈哈}$</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是本人在这个hexo博客上写的第一篇博文！&lt;br&gt;&lt;del&gt;[鼓掌]&lt;/del&gt;&lt;br&gt;
    
    </summary>
    
    
    
      <category term="数据结构" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="http://yoursite.com/2020/04/06/test/"/>
    <id>http://yoursite.com/2020/04/06/test/</id>
    <published>2020-04-06T11:00:34.000Z</published>
    <updated>2020-04-06T11:07:44.655Z</updated>
    
    <content type="html"><![CDATA[<p>没啥，就是一个简单的test哦<br><a id="more"></a></p><h1 id="test"><a href="#test" class="headerlink" title="test"></a>test</h1><h2 id="test-1"><a href="#test-1" class="headerlink" title="test"></a>test</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"Hello VScode World"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;没啥，就是一个简单的test哦&lt;br&gt;
    
    </summary>
    
    
    
      <category term="test" scheme="http://yoursite.com/tags/test/"/>
    
  </entry>
  
</feed>
